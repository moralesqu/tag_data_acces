@import "~@angular/material/theming";
$mat-theme-ignore-duplication-warnings: true;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-blue-grey, 600, 800, 200);
$candy-app-accent: mat-palette($mat-yellow, 600, 900, 200);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red, 600, 800, 100);

// Own Vb colors for app using mat palette.
$normal-state-color: mat-palette($mat-blue, 600);
$success-state-color: mat-palette($mat-green, 600);
$warning-state-color: mat-palette($mat-amber, 600);
$disabled-state-color: mat-palette($mat-gray, 300);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme((
        color: (
                primary: $candy-app-primary,
                accent: $candy-app-accent,
                warn: $candy-app-warn,
        )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

.cdk-global-scrollblock {
  position: static;
  overflow: hidden !important;
}
